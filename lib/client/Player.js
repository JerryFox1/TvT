// Generated by CoffeeScript 1.4.0
(function() {
  var Player, Sprite,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  Sprite = require('./Sprite');

  Player = (function(_super) {

    __extends(Player, _super);

    function Player(args) {
      this.handleKeyUp = __bind(this.handleKeyUp, this);

      this.handleKeyDown = __bind(this.handleKeyDown, this);
      if (args == null) {
        args = {};
      }
      args.src = 'img/textures/custom/tank_rogue.png';
      Player.__super__.constructor.call(this, args);
      this.size = {
        width: 124,
        height: 153
      };
      this.worldInfo.maxVelocity = 150;
      this.worldInfo.maxAngularVelocity = Math.PI / 4;
      this.events.bind('keydown', this.handleKeyDown);
      this.events.bind('keyup', this.handleKeyUp);
    }

    Player.prototype.handleKeyDown = function(e) {
      if (e.key === 'W') {
        this.worldInfo.velocityFactor = -1;
      }
      if (e.key === 'S') {
        this.worldInfo.velocityFactor = 1;
      }
      if (e.key === 'A') {
        this.worldInfo.angularVelocityFactor = -1;
      }
      if (e.key === 'D') {
        this.worldInfo.angularVelocityFactor = 1;
      }
      if (this.worldInfo.velocityFactor !== 0) {
        this.updateVelocity();
      }
      if (this.worldInfo.angularVelocityFactor !== 0) {
        this.worldInfo.angularVelocity = this.worldInfo.angularVelocityFactor * this.worldInfo.maxAngularVelocity;
      }
    };

    Player.prototype.handleKeyUp = function(e) {
      if (e.key === 'W' || e.key === 'S') {
        this.worldInfo.velocityFactor = 0;
      }
      if (e.key === 'A' || e.key === 'D') {
        this.worldInfo.angularVelocityFactor = 0;
      }
    };

    Player.prototype.update = function(elapsedMS) {
      Player.__super__.update.call(this, elapsedMS);
      if (this.world.camera != null) {
        return this.world.camera.lookAt(this.position);
      }
    };

    return Player;

  })(Sprite);

  module.exports = Player;

}).call(this);
